#Elastic-ocean config file
# Restart with: haproxy -f /etc/haproxy/haproxy.cfg -p /var/run/haproxy.pid -sf $(cat /var/run/haproxy.pid)

global
  maxconn 10000 # Max simultaneous connections from an upstream server
  spread-checks 5 # Distribute health checks with some randomness
  log 127.0.0.1 local0
  log 127.0.0.1 local1 notice
  pidfile /var/run/haproxy.pid
  stats socket /tmp/haproxy level admin

defaults # Apply to all services
  log global
  mode http
  balance roundrobin
  option abortonclose # abort request if client closes output channel while waiting
  option httpclose # add "Connection:close" header if it is missing
  option forwardfor # insert x-forwarded-for header so that app servers can see both proxy and client IPs
  option redispatch # any server can handle any session
  timeout client 60s
  timeout connect 3s
  timeout server 30s
  timeout check 5s
  stats enable
  stats uri /stats
  stats realm Haproxy\ Statistics
  stats auth username:password
  monitor-uri /monitor # Returns 200 if we're up; real path redacted

  frontend incoming
    bind *:8080
    #bind *:80,:443 ssl crt /root/cert/site.pem
    default_backend elastic-ocean
    #reqadd  X-Forwarded-Proto:\ https

backend elastic-ocean
  option httpchk GET /
  #GOEDIT Start server list
  server elastic-ocean-1486869-abc 162.243.21.220:8000 maxconn 32 check
  server elastic-ocean-1486869-def 162.243.223.142:8000 maxconn 32 check backup
  #GOEDIT End server list
